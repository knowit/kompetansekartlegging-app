name: Callable deploy workflow

on:
  workflow_call:
    inputs:
      aws_environment:
        type: string
        required: true
      aws_region:
        type: string
        default: "eu-central-1"
      deploy_backend_only:
        type: boolean
        default: false
      excel:
        type: boolean
        default: true
    secrets:
      AWS_DEPLOY_ROLE:
        required: true
      AZURE:
        required: true
      SLACK_DEPLOY_WEBHOOK_URL:
        required: true

jobs:
  deploy:
    name: Deploy ${{ inputs.aws_environment }}
    runs-on: ubuntu-latest
    permissions: # Needed to interact with GitHub's OIDC Token endpoint
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "16"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_DEPLOY_ROLE }}
          aws-region: ${{ inputs.aws_region }}

      - name: Install packages
        run: ./install.sh

      - name: Update CDK Toolkit
        run: cd cdk && npx cdk bootstrap

      - name: Deploy backend to ${{ inputs.aws_environment }}
        run: |
          cd cdk && npx cdk deploy \
          --require-approval never \
          --outputs-file outputs.json \
          --context ENV=${{ inputs.aws_environment }} \
          --context AZURE=${{ secrets.AZURE }} \
          --context EXCEL=${{ inputs.excel }}

      - name: Prepare frontend ${{ inputs.aws_environment }} deployment
        if: inputs.deploy_backend_only == false
        env:
          VITE_USER_BRANCH: ${{ inputs.aws_environment == 'prod' && 'master' || 'dev' }}
          NODE_OPTIONS: "--max_old_space_size=4096"
        run: |
          cd cdk && npx ts-node --prefer-ts-exts hooks/hooks.ts && \
          npm run codegen && \
          cd ../frontend && echo $VITE_USER_BRANCH >> .env && \
          CI='' npm run build \

      - name: Deploy frontend to ${{ inputs.aws_environment }}
        if: inputs.deploy_backend_only == false
        run: cd frontend-cdk && npx cdk deploy --require-approval never

  slackNotification:
    if: ${{ always() }}
    needs: deploy
    name: Slack Notification
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: kompetansekartlegging-deployments
          SLACK_COLOR: ${{ needs.deploy.result }}
          SLACK_USERNAME: Kompetansekartlegging deploy bot
          SLACK_WEBHOOK: ${{ secrets.SLACK_DEPLOY_WEBHOOK_URL }}
          SLACK_MESSAGE: ":${{inputs.aws_environment}}: [Deploy to ${{inputs.aws_environment}}] ${{ github.event.head_commit.message }}"
          MSG_MINIMAL: event,commit
          SLACK_FOOTER:
